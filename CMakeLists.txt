cmake_minimum_required(VERSION 3.18)

project(QuickJS
        VERSION 20231209
        LANGUAGES C
)

set(CMAKE_C_STANDARD 11)

find_package(pthread CONFIG REQUIRED)

set(
        PRG_SOURCES
        cutils.c
        libbf.c
        libregexp.c
        libunicode.c
        quickjs.c
        quickjs-libc.c
)

set(
        PRG_HEADERS
        cutils.h
        libbf.h
        libregexp.h
        libunicode.h
        libunicode-table.h
        list.h
        quickjs.h
        quickjs-libc.h
        quickjs-opcode.h
)

add_library(quickjs
        STATIC
        ${PRG_HEADERS}
        ${PRG_SOURCES}
)

target_include_directories(quickjs
        PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}
        ${PTHREAD_INCLUDE_DIR}
)

target_link_directories(quickjs
        PRIVATE
        ${PTHREAD_LIBRARY_DIR}
)

target_compile_definitions(quickjs
        PUBLIC
        CONFIG_VERSION="${PROJECT_VERSION}"
        CONFIG_BIGNUM=1
)

# https://devblogs.microsoft.com/cppblog/c11-atomics-in-visual-studio-2022-version-17-5-preview-2/#try-them-out
if (MSVC)
    target_compile_options(quickjs
            PRIVATE
            /experimental:c11atomics
    )
endif ()

target_link_libraries(quickjs
        PUBLIC
        ${PTHREAD_LIBRARY}
)

add_executable(qjsc
        qjsc.c
)
target_link_libraries(qjsc
        PUBLIC
        quickjs
)


add_custom_command(
        OUTPUT repl.c
        COMMAND qjsc -c -o ${CMAKE_BINARY_DIR}/repl.c -m repl.js
        DEPENDS qjsc
        WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
)

add_custom_command(
        OUTPUT qjscalc.c
        COMMAND qjsc -c -o ${CMAKE_BINARY_DIR}/qjscalc.c -m qjscalc.js
        DEPENDS qjsc
        WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
)

add_executable(qjs)
target_link_libraries(qjs
        PUBLIC
        quickjs
)
target_compile_definitions(qjs
        PUBLIC
        CONFIG_VERSION="${PROJECT_VERSION}"
        CONFIG_BIGNUM=1
)
target_sources(qjs
        PRIVATE

        # generated by gen_repl_c
        repl.c

        # generated by gen_qjscalc_c
        qjscalc.c

        qjs.c
)


# TESTS
add_executable(test262-all
        run-test262.c
)
target_include_directories(test262-all
    PRIVATE
        ${PTHREAD_INCLUDE_DIR}
)
target_link_libraries(test262-all
    PRIVATE
    quickjs
)
target_link_directories(test262-all
        PRIVATE
        ${PTHREAD_LIBRARY_DIR}
)
add_custom_target(run-test262-all
        COMMAND test262-all -m -c "${CMAKE_SOURCE_DIR}/test262.conf"
)